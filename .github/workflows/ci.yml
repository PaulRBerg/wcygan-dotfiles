name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Cache Deno dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Verify Deno installation
        run: |
          deno --version
          echo "Deno installed successfully"

      - name: Check deno.json syntax
        run: deno task --help

      - name: Type check
        run: |
          echo "Running type check..."
          deno task check
          echo "✅ Type check passed"

      - name: Lint
        run: |
          echo "Running linter..."
          deno lint
          echo "✅ Lint check passed"

      - name: Format check
        run: |
          echo "Running format check..."
          deno fmt --check
          echo "✅ Format check passed"

      - name: Run tests
        run: |
          echo "Running tests..."
          deno task test
          echo "✅ Tests passed"

      - name: Test bash enhancements
        if: runner.os != 'Windows'
        run: |
          echo "Running bash enhancement tests..."
          deno task test:bash
          echo "✅ Bash enhancement tests passed"

      - name: Test installation (dry run)
        run: |
          echo "Testing installation script (dry run)..."
          deno run --allow-all install-safely.ts --help
          echo "✅ Installation script help works"

      - name: Verify all scripts are executable
        if: runner.os != 'Windows'
        run: |
          echo "Checking script permissions..."
          ls -la *.ts scripts/*.ts
          echo "✅ Script permissions verified"
