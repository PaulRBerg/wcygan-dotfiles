{
  "version": "1.0.0",
  "description": "Modern dotfiles with Deno TypeScript installation scripts",
  "imports": {
    "@std/path": "jsr:@std/path@^1.0.9",
    "@std/fs": "jsr:@std/fs@^1.0.17",
    "@std/fs/exists": "jsr:@std/fs@^1.0.17/exists",
    "@std/fs/copy": "jsr:@std/fs@^1.0.17/copy",
    "@std/fs/ensure-dir": "jsr:@std/fs@^1.0.17/ensure-dir",
    "@std/cli/parse-args": "jsr:@std/cli@^1.0.9/parse-args",
    "@std/assert": "jsr:@std/assert@^1.0.9"
  },
  "tasks": {
    "install": "deno run --allow-all scripts/install-safely.ts",
    "install:force": "deno run --allow-all scripts/install-safely.ts --force",
    "rollback": "deno run --allow-all scripts/rollback.ts",
    "rollback:force": "deno run --allow-all scripts/rollback.ts --force",
    "check": "deno check scripts/install-safely.ts scripts/rollback.ts",
    "help": "deno run --allow-all scripts/install-safely.ts --help",
    "test": "deno test --allow-all scripts/integration-test.ts",
    "test:actions": "deno run --allow-all scripts/test-actions-locally.ts",
    "ci:check": "deno run --allow-all scripts/ci-environment-check.ts",
    "ci:check:critical": "deno run --allow-all scripts/ci-environment-check.ts --critical-only",
    "ci:fix": "deno run --allow-all scripts/ci-environment-check.ts --fix",
    "pre-commit": "deno run --allow-all scripts/pre-commit-check.ts",
    "pre-commit:fix": "deno run --allow-all scripts/pre-commit-check.ts --fix",
    "agent": "deno run --allow-all scripts/launch-agent.ts",
    "claim-task": "deno run --allow-all scripts/claim-next-task.ts",
    "clean-backups": "deno run --allow-all scripts/clean-backups.ts",
    "docs:dev": "cd docs-prototype && npm start",
    "docs:build": "cd docs-prototype && npm run build",
    "docs:serve": "cd docs-prototype && npm run serve",
    "docs:typecheck": "cd docs-prototype && npm run typecheck",
    "docs:install": "cd docs-prototype && npm install"
  },
  "lint": {
    "rules": {
      "tags": [
        "recommended"
      ]
    }
  },
  "fmt": {
    "useTabs": false,
    "lineWidth": 100,
    "indentWidth": 2,
    "semiColons": true,
    "singleQuote": false,
    "proseWrap": "preserve"
  }
}
